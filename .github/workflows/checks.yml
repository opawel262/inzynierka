---
name: Checks

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets
        run: |
          echo "EMAIL_EMAIL=${{ secrets.EMAIL_EMAIL }}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}" >> .env
          echo "BACKEND_URL=${{ secrets.BACKEND_URL }}" >> .env
          echo "FRONTED_URL=${{ secrets.FRONTED_URL }}" >> .env
          echo "EXAMPLE_USER_EMAIL=${{ secrets.EXAMPLE_USER_EMAIL }}" >> .env
          echo "EXAMPLE_USER_PASSWORD=${{ secrets.EXAMPLE_USER_PASSWORD }}" >> .env
          echo "EXAMPLE_USER_USERNAME=${{ secrets.EXAMPLE_USER_USERNAME }}" >> .env
          echo "EXAMPLE_USER_2_EMAIL=${{ secrets.EXAMPLE_USER_2_EMAIL }}" >> .env
          echo "EXAMPLE_USER_2_PASSWORD=${{ secrets.EXAMPLE_USER_2_PASSWORD }}" >> .env
          echo "EXAMPLE_USER_2_USERNAME=${{ secrets.EXAMPLE_USER_2_USERNAME }}" >> .env

      - name: Build Docker images
        run: docker compose -f "docker-compose.test.yml" build

      - name: Run pytest in Docker
        run: docker compose -f "docker-compose.test.yml" up --abort-on-container-exit --exit-code-from web_test

      - name: Clean up containers and volumes
        run: docker compose -f "docker-compose.test.yml" down --volumes --remove-orphans
